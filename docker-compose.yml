version: '3.8'

services:

  login_server:
    container_name: login_server
    image: login_server
    build:
      context: .
      dockerfile: login_server.dockerfile
      args:
        PACKAGES: "less nano wget curl"
    ports:
      - "80:80"
    networks:
      - login-network
    volumes:
      - .:/var/www/html
    environment:
      - APP_ENV=production
      - APP_VERSION=1.0
      - MINIO_PORT=${MINIO_PORT}
      - MY_RESOURCES_BUCKET_NAME=${MY_RESOURCES_BUCKET_NAME}
      - MY_PRIV_RESOURCES_BUCKET_NAME=${MY_PRIV_RESOURCES_BUCKET_NAME}
      - LOGIN_DB_NAME=${LOGIN_DB_NAME}
      - MINIO_LOGIN_SVR_USER=minioadmin
      - MINIO_LOGIN_SVR_PWD=minioadmin
    depends_on:
      - login_db_server
      - minio

  login_db_server:
    container_name: login_db_server
    image: login_db_server
    networks:
      - login-network
    build:
      context: .
      dockerfile: login_db_server.dockerfile
      args:
        PACKAGES: "less nano wget curl"
    environment:
      MYSQL_DATABASE: '${LOGIN_DB_NAME}'
      MYSQL_HOST: 'localhost'
      MYSQL_ROOT_USER: 'root'
      MYSQL_ROOT_PASSWORD: 'domingo.18.noviembre'
      MYSQL_USER: 'admin'
      MYSQL_PASSWORD: 'domingo.18.noviembre'
    volumes:
      - ./dbs/login/entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./dbs/login/var:/var/lib/mysql
 
  minio:
    image: quay.io/minio/minio
    container_name: minio
    networks:
      - login-network
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - ./data:/data
    command: server /data

networks:
  login-network:
    driver: bridge

